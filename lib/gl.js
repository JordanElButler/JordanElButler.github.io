let gl;
let program;
function glInit() {
  gl = getWebgl();
  if(!gl) {
    throw new Error("Could not get webgl handle");
  }

  let vs = getShader(vsource, gl.VERTEX_SHADER);
  let fs = getShader(fsource, gl.FRAGMENT_SHADER);
  program = createShaderObject(vs, fs);
  gl.useProgram(program);
  show();
}

var fsource = `
  precision mediump float;
  varying vec3 col;
  void main() {
    gl_FragColor = vec4(col, 1.0);
  }
`;
var vsource = `
  varying vec3 col;
  attribute vec3 aVertex;
  uniform mat4 uMV;
  uniform mat4 uProj;
  void main() {
    gl_Position = uProj * uMV * vec4(aVertex, 1.0);
    col = normalize(aVertex);
  }
`;
function getXData() {
  return {
    vertices: [
0.992139,-1.002139,0.499465,0.992139,-1.002139,1.000535,-1.012139,-1.002139,1.000535,-1.012139,-1.002139,0.499465,0.992140,1.002139,0.499465,0.992139,1.002139,1.000535,-1.012140,1.002139,1.000535,-1.012139,1.002139,
0.499465,0.992139,-1.002139,0.750000,-0.010000,-0.525577,0.499465,0.503933,0.000000,0.499465,-0.010000,-0.525577,1.000535,0.503933,0.000000,1.000535,-1.012139,-1.002139,0.750000,-0.513678,0.000000,1.000535,-0.513677,
0.000000,0.499465,0.992139,1.002139,0.750000,-0.010000,0.488778,0.499465,-0.010000,0.488778,1.000535,-1.012139,1.002139,0.750000,-0.010000,0.000000,0.499465,-0.513677,0.000000,0.750000,-0.010000,0.000000,1.000535,0.503933,
0.000000,0.750000,-0.010000,0.488778,0.750000,-0.010000,-0.525577,0.750000,0.992139,-1.002139,0.875267,-0.511069,-1.002139,0.499465,0.992140,0.501070,0.499465,-0.511070,-1.002139,1.000535,0.992139,0.501070,1.000535,
-1.012139,-1.002139,0.624732,-1.012140,0.501070,1.000535,-1.012139,0.501070,0.499465,0.992139,1.002139,0.875268,-0.511069,1.002139,0.499465,-0.511070,1.002139,1.000535,-1.012139,1.002139,0.624733,0.992139,-1.002139,
0.624733,0.491070,-1.002139,0.499465,0.992139,-0.501070,0.499465,0.491070,-1.002139,1.000535,0.992139,-0.501070,1.000535,-1.012139,-1.002139,0.875267,-1.012140,-0.501070,1.000535,-1.012139,-0.501070,0.499465,0.992140,
1.002139,0.624733,0.491070,1.002139,0.499465,0.491069,1.002139,1.000535,-1.012140,1.002139,0.875267,-0.511069,0.000000,0.499465,0.491070,0.000000,0.499465,-0.010000,0.501070,0.499465,-0.010000,-0.501070,0.499465,-0.513677,
0.000000,0.624733,-0.513678,0.000000,0.875267,-1.012139,-0.501070,0.750000,-1.012139,0.501070,0.750000,-0.511070,0.000000,1.000535,0.491069,0.000000,1.000535,-0.010000,-0.501070,1.000535,-0.010000,0.501070,1.000535,
0.503933,0.000000,0.875268,0.503933,0.000000,0.624733,0.992139,-0.501070,0.750000,0.992139,0.501070,0.750000,-0.010000,0.488778,0.875268,-0.010000,0.488778,0.624733,0.491070,1.002139,0.750000,-0.511070,1.002139,0.750000,
-0.511069,-1.002139,0.750000,0.491070,-1.002139,0.750000,-0.010000,-0.525577,0.624733,-0.010000,-0.525577,0.875267,0.491070,-1.002139,0.875267,0.491070,-1.002139,0.624733,-0.511069,-1.002139,0.624733,-0.511070,
1.002139,0.624733,0.491070,1.002139,0.624733,0.491069,1.002139,0.875268,0.992140,0.501070,0.624733,0.992139,-0.501070,0.624733,0.992139,-0.501070,0.875267,0.491069,0.501070,1.000535,0.491070,-0.501070,1.000535,-0.511070,
-0.501070,1.000535,-1.012139,0.501070,0.875267,-1.012139,-0.501070,0.875267,-1.012139,-0.501070,0.624732,0.491070,-0.501070,0.499465,0.491070,0.501070,0.499465,-0.511069,0.501070,0.499465,-0.511069,-0.501070,0.499465,
-1.012139,0.501070,0.624733,-0.511070,0.501070,1.000535,0.992139,0.501070,0.875268,-0.511070,1.002139,0.875267,-0.511070,-1.002139,0.875267,0.988785,-0.998531,-1.028297,0.988785,-0.998531,-0.527227,-1.015494,
-0.998531,-0.527227,-1.015493,-0.998531,-1.028297,0.988785,1.005748,-1.028297,0.988784,1.005748,-0.527227,-1.015494,1.005748,-0.527227,-1.015494,1.005748,-1.028297,0.988785,-0.998531,-0.777762,-0.013354,
-0.521969,-1.028297,0.500579,0.003609,-1.028297,-0.013354,-0.521969,-0.527227,0.500578,0.003609,-0.527227,-1.015494,-0.998531,-0.777762,-0.517032,0.003609,-0.527227,-0.517032,0.003609,-1.028297,0.988785,1.005748,
-0.777762,-0.013354,0.492386,-1.028297,-0.013355,0.492386,-0.527227,-1.015494,1.005748,-0.777762,-0.013354,0.003609,-1.028297,-0.517032,0.003609,-0.777762,-0.013355,0.003609,-0.527227,0.500579,0.003609,-0.777762,
-0.013355,0.492386,-0.777762,-0.013354,-0.521969,-0.777762,0.988785,-0.998531,-0.652495,-0.514424,-0.998531,-1.028297,0.988785,0.504678,-1.028297,-0.514424,-0.998531,-0.527227,0.988784,0.504678,-0.527227,
-1.015493,-0.998531,-0.903030,-1.015494,0.504678,-0.527227,-1.015494,0.504678,-1.028297,0.988785,1.005748,-0.652495,-0.514424,1.005748,-1.028297,-0.514425,1.005748,-0.527227,-1.015494,1.005748,-0.903030,0.988785,
-0.998531,-0.903030,0.487715,-0.998531,-1.028297,0.988785,-0.497461,-1.028297,0.487715,-0.998531,-0.527227,0.988785,-0.497461,-0.527227,-1.015494,-0.998531,-0.652495,-1.015494,-0.497461,-0.527227,-1.015493,
-0.497461,-1.028297,0.988785,1.005748,-0.903029,0.487716,1.005748,-1.028297,0.487715,1.005748,-0.527227,-1.015494,1.005748,-0.652495,-0.514424,0.003609,-1.028297,0.487715,0.003609,-1.028297,-0.013354,0.504678,
-1.028297,-0.013354,-0.497461,-1.028297,-0.517032,0.003609,-0.903030,-0.517032,0.003609,-0.652495,-1.015494,-0.497461,-0.777762,-1.015494,0.504678,-0.777762,-0.514424,0.003609,-0.527227,0.487715,0.003609,
-0.527227,-0.013355,-0.497461,-0.527227,-0.013355,0.504678,-0.527227,0.500578,0.003609,-0.652495,0.500579,0.003609,-0.903030,0.988785,-0.497461,-0.777762,0.988785,0.504678,-0.777762,-0.013355,0.492386,-0.652495,
-0.013354,0.492386,-0.903030,0.487715,1.005748,-0.777762,-0.514424,1.005748,-0.777762,-0.514424,-0.998531,-0.777762,0.487715,-0.998531,-0.777762,-0.013354,-0.521969,-0.903030,-0.013354,-0.521969,-0.652495,
0.487715,-0.998531,-0.652495,0.487715,-0.998531,-0.903030,-0.514424,-0.998531,-0.903030,-0.514424,1.005748,-0.903030,0.487715,1.005748,-0.903029,0.487715,1.005748,-0.652495,0.988785,0.504678,-0.903029,0.988785,
-0.497461,-0.903030,0.988785,-0.497461,-0.652495,0.487715,0.504678,-0.527227,0.487715,-0.497461,-0.527227,-0.514424,-0.497461,-0.527227,-1.015494,0.504678,-0.652495,-1.015494,-0.497461,-0.652495,-1.015494,
-0.497461,-0.903030,0.487715,-0.497461,-1.028297,0.487715,0.504678,-1.028297,-0.514424,0.504678,-1.028297,-0.514424,-0.497461,-1.028297,-1.015494,0.504678,-0.903030,-0.514424,0.504678,-0.527227,0.988785,0.504678,
-0.652495,-0.514424,1.005748,-0.652495,-0.514424,-0.998531,-0.652495,0.493350,-1.002139,-1.027374,0.994420,-1.002139,-1.027374,0.994420,-1.002139,0.976905,0.493350,-1.002139,0.976904,0.493350,1.002139,-1.027375,
0.994420,1.002139,-1.027374,0.994420,1.002139,0.976905,0.493350,1.002139,0.976904,0.743885,-1.002139,-1.027374,0.493350,-0.525577,-0.025235,0.493350,0.000000,-0.539168,0.994420,-0.525577,-0.025235,0.994420,0.000000,
-0.539168,0.743885,-1.002139,0.976904,0.994420,0.000000,0.478443,0.493350,0.000000,0.478442,0.743885,1.002139,-1.027374,0.493350,0.488778,-0.025235,0.994420,0.488778,-0.025234,0.743885,1.002139,0.976905,0.493350,0.000000,
-0.025235,0.743885,0.000000,0.478443,0.994420,0.000000,-0.025235,0.743885,0.000000,-0.539168,0.743885,0.488778,-0.025235,0.743885,-0.525577,-0.025235,0.869153,-1.002139,-1.027374,0.493350,-1.002139,0.475834,0.493350,
0.501070,-1.027375,0.994420,-1.002139,0.475835,0.994420,0.501070,-1.027374,0.618618,-1.002139,0.976904,0.994420,0.501070,0.976905,0.493350,0.501070,0.976904,0.869153,1.002139,-1.027374,0.493350,1.002139,0.475835,0.994420,
1.002139,0.475835,0.618618,1.002139,0.976904,0.618618,-1.002139,-1.027374,0.493350,-1.002139,-0.526305,0.493350,-0.501070,-1.027374,0.994420,-1.002139,-0.526304,0.994420,-0.501070,-1.027374,0.869153,-1.002139,
0.976904,0.994420,-0.501070,0.976905,0.493350,-0.501070,0.976904,0.618618,1.002139,-1.027375,0.493350,1.002139,-0.526305,0.994420,1.002139,-0.526304,0.869153,1.002139,0.976905,0.493350,0.000000,0.475835,0.493350,0.000000,
-0.526305,0.493350,0.501070,-0.025235,0.493350,-0.501070,-0.025235,0.618618,0.000000,0.478442,0.869153,0.000000,0.478443,0.743885,-0.501070,0.976904,0.743885,0.501070,0.976904,0.994420,0.000000,0.475835,0.994420,0.000000,
-0.526304,0.994420,-0.501070,-0.025235,0.994420,0.501070,-0.025235,0.869153,0.000000,-0.539168,0.618618,0.000000,-0.539168,0.743885,-0.501070,-1.027374,0.743885,0.501070,-1.027374,0.869153,0.488778,-0.025235,0.618618,
0.488778,-0.025235,0.743885,1.002139,-0.526304,0.743885,1.002139,0.475835,0.743885,-1.002139,0.475835,0.743885,-1.002139,-0.526305,0.618618,-0.525577,-0.025235,0.869153,-0.525577,-0.025235,0.869153,-1.002139,
-0.526304,0.618618,-1.002139,-0.526305,0.618618,-1.002139,0.475834,0.618618,1.002139,0.475835,0.618618,1.002139,-0.526305,0.869153,1.002139,-0.526304,0.618618,0.501070,-1.027375,0.618618,-0.501070,-1.027374,0.869153,
-0.501070,-1.027374,0.994420,0.501070,-0.526304,0.994420,-0.501070,-0.526304,0.994420,-0.501070,0.475835,0.869153,0.501070,0.976905,0.869153,-0.501070,0.976904,0.618618,-0.501070,0.976904,0.493350,-0.501070,-0.526305,
0.493350,0.501070,-0.526305,0.493350,0.501070,0.475835,0.493350,-0.501070,0.475834,0.618618,0.501070,0.976904,0.994420,0.501070,0.475835,0.869153,0.501070,-1.027374,0.869153,1.002139,0.475835,0.869153,-1.002139,0.475835,
-1.020436,-1.007321,-1.009706,-0.519366,-1.007321,-1.009706,-0.519366,-1.007321,0.994573,-1.020436,-1.007321,0.994572,-1.020436,0.996957,-1.009707,-0.519366,0.996957,-1.009706,-0.519366,0.996957,0.994573,
-1.020436,0.996957,0.994572,-0.769901,-1.007321,-1.009706,-1.020436,-0.530760,-0.007567,-1.020436,-0.005182,-0.521500,-0.519366,-0.530760,-0.007567,-0.519366,-0.005182,-0.521500,-0.769901,-1.007321,0.994572,
-0.519366,-0.005182,0.496111,-1.020436,-0.005182,0.496110,-0.769901,0.996957,-1.009706,-1.020436,0.483596,-0.007567,-0.519366,0.483596,-0.007566,-0.769901,0.996957,0.994573,-1.020436,-0.005182,-0.007567,
-0.769901,-0.005182,0.496111,-0.519366,-0.005182,-0.007567,-0.769901,-0.005182,-0.521500,-0.769901,0.483596,-0.007567,-0.769901,-0.530760,-0.007567,-0.644634,-1.007321,-1.009706,-1.020436,-1.007321,0.493502,
-1.020436,0.495887,-1.009707,-0.519366,-1.007321,0.493503,-0.519366,0.495887,-1.009706,-0.895168,-1.007321,0.994572,-0.519366,0.495887,0.994573,-1.020436,0.495887,0.994572,-0.644634,0.996957,-1.009706,-1.020436,
0.996957,0.493503,-0.519366,0.996957,0.493503,-0.895168,0.996957,0.994572,-0.895168,-1.007321,-1.009706,-1.020436,-1.007321,-0.508637,-1.020436,-0.506252,-1.009706,-0.519366,-1.007321,-0.508637,-0.519366,
-0.506252,-1.009706,-0.644634,-1.007321,0.994572,-0.519366,-0.506252,0.994573,-1.020436,-0.506252,0.994572,-0.895168,0.996957,-1.009706,-1.020436,0.996957,-0.508637,-0.519366,0.996957,-0.508636,-0.644634,
0.996957,0.994573,-1.020436,-0.005182,0.493502,-1.020436,-0.005182,-0.508637,-1.020436,0.495887,-0.007567,-1.020436,-0.506252,-0.007567,-0.895168,-0.005182,0.496110,-0.644634,-0.005182,0.496111,-0.769901,
-0.506252,0.994572,-0.769901,0.495887,0.994572,-0.519366,-0.005182,0.493503,-0.519366,-0.005182,-0.508636,-0.519366,-0.506252,-0.007567,-0.519366,0.495887,-0.007567,-0.644634,-0.005182,-0.521500,-0.895168,
-0.005182,-0.521500,-0.769901,-0.506252,-1.009706,-0.769901,0.495887,-1.009706,-0.644634,0.483596,-0.007567,-0.895168,0.483596,-0.007567,-0.769901,0.996957,-0.508636,-0.769901,0.996957,0.493503,-0.769901,
-1.007321,0.493503,-0.769901,-1.007321,-0.508637,-0.895168,-0.530760,-0.007567,-0.644634,-0.530760,-0.007567,-0.644634,-1.007321,-0.508637,-0.895168,-1.007321,-0.508637,-0.895168,-1.007321,0.493502,
-0.895168,0.996957,0.493503,-0.895168,0.996957,-0.508637,-0.644634,0.996957,-0.508636,-0.895168,0.495887,-1.009706,-0.895168,-0.506252,-1.009706,-0.644634,-0.506252,-1.009706,-0.519366,0.495887,-0.508636,
-0.519366,-0.506252,-0.508636,-0.519366,-0.506252,0.493503,-0.644634,0.495887,0.994573,-0.644634,-0.506252,0.994572,-0.895168,-0.506252,0.994572,-1.020436,-0.506252,-0.508637,-1.020436,0.495887,-0.508637,
-1.020436,0.495887,0.493502,-1.020436,-0.506252,0.493502,-0.895168,0.495887,0.994572,-0.519366,0.495887,0.493503,-0.644634,0.495887,-1.009706,-0.644634,0.996957,0.493503,-0.644634,-1.007321,0.493503
  ],
  normals: [
    0.0000,-1.0000,0.0000,0.0000,1.0000,-0.0000,1.0000,0.0000,0.0000,0.0000,0.0000,1.0000,-1.0000,-0.0000,-0.0000,0.0000,0.0000,-1.0000,-0.7089,0.7053,-0.0000,0.7162,0.6979,
    0.0000,-0.7156,0.6985,-0.0000,-0.6892,-0.7246,0.0000,0.6892,-0.7246,0.0000,0.7156,0.6985,0.0000,0.7162,-0.6979,0.0000,-0.7089,-0.7053,-0.0000,0.0001,0.0000,-1.0000,
    -0.0000,0.7053,0.7089,0.0000,0.6979,-0.7162,-0.0000,0.6985,0.7156,-0.0000,-0.7246,0.6892,0.0000,-0.7246,-0.6892,0.0000,0.6985,-0.7156,0.0000,-0.6979,-0.7162,-0.0000,
    -0.7053,0.7089
  ],
  faces: [
    30,44,98,50,37,97,35,31,96,37,33,95,38,34,94,93,4,46,92,16,34,52,53,91,90,10,54,55,46,89,56,57,88,87,20,58,86,15,45,60,61,85,84,19,62,63,43,83,82,
    24,65,47,66,81,67,49,80,68,69,79,38,70,78,71,32,77,72,73,76,42,74,75,75,26,72,27,72,9,2,75,27,76,10,40,39,40,1,9,76,39,77,4,28,73,28,10,26,77,
    73,78,25,68,36,68,18,8,78,36,79,17,47,48,47,5,18,79,48,80,6,35,69,35,17,25,80,69,64,66,24,11,81,64,5,81,29,82,9,39,41,39,1,11,82,41,83,2,27,
    65,27,9,24,83,65,84,23,60,13,84,60,6,84,31,85,12,42,43,42,2,13,85,43,86,3,30,12,86,30,23,86,61,56,58,22,33,56,15,7,87,33,88,14,44,45,44,3,15,
    88,45,89,4,32,57,32,14,22,89,57,90,21,52,11,90,52,1,90,41,48,53,18,29,48,5,11,91,29,36,34,8,18,92,36,21,92,53,93,16,51,54,51,21,10,93,54,94,16,
    55,58,55,22,58,38,94,95,15,59,62,59,23,62,37,95,63,31,13,24,96,63,17,96,66,97,19,67,70,67,25,20,97,70,98,14,71,74,71,26,12,98,74,30,3,44,50,7,37,
    35,6,31,37,7,33,38,8,34,93,28,4,92,51,16,52,21,53,90,40,10,55,16,46,56,22,57,87,50,20,86,59,15,60,23,61,84,49,19,63,13,43,82,64,24,47,17,66,67,
    19,49,68,25,69,38,20,70,71,14,32,72,26,73,42,12,74,75,74,26,27,75,72,2,42,75,76,73,10,39,76,40,9,72,76,77,32,4,73,77,28,26,71,77,78,70,25,36,78,
    68,8,38,78,79,69,17,48,79,47,18,68,79,80,49,6,69,80,35,25,67,80,64,81,66,11,29,81,5,47,81,82,65,9,41,82,39,11,64,82,83,43,2,65,83,27,24,63,83,
    84,62,23,13,31,84,6,49,84,85,61,12,43,85,42,13,60,85,86,45,3,12,61,86,23,59,86,56,87,58,33,87,56,7,50,87,88,57,14,45,88,44,15,56,88,89,46,4,57,
    89,32,22,55,89,90,54,21,11,41,90,1,40,90,48,91,53,29,91,48,11,52,91,36,92,34,18,53,92,21,51,92,93,46,16,54,93,51,10,28,93,94,34,16,58,94,55,58,20,
    38,95,33,15,62,95,59,62,19,37,63,96,31,24,66,96,17,35,96,97,37,19,70,97,67,20,50,97,98,44,14,74,98,71,12,30,98,128,142,196,148,135,195,133,129,194,135,131,193,
    136,132,192,191,102,144,190,114,132,150,151,189,188,108,152,153,144,187,154,155,186,148,156,185,184,113,143,158,159,183,182,117,160,161,141,181,162,163,180,145,164,179,165,147,178,166,167,177,136,
    168,176,169,130,175,170,171,174,140,172,173,173,124,170,125,170,107,100,173,125,174,108,138,137,138,99,107,174,137,175,102,126,171,126,108,124,175,171,176,123,166,134,166,116,106,176,134,177,115,
    145,146,145,103,116,177,146,178,104,133,167,133,115,123,178,167,162,164,122,109,179,162,103,179,127,180,107,137,139,137,99,109,180,139,181,100,125,163,125,107,122,181,163,182,121,158,111,182,158,
    104,182,129,183,110,140,141,140,100,111,183,141,184,101,128,110,184,128,121,184,159,154,156,120,113,185,154,105,185,131,186,112,142,143,142,101,113,186,143,187,102,130,155,130,112,120,187,155,188,
    119,150,109,188,150,99,188,139,146,151,116,127,146,103,109,189,127,190,106,134,116,190,134,119,190,151,191,114,149,119,191,149,108,191,152,153,132,114,120,192,153,118,192,156,193,113,157,160,157,
    121,160,135,193,161,129,111,122,194,161,115,194,164,195,117,165,168,165,123,118,195,168,196,112,169,172,169,124,110,196,172,128,101,142,148,105,135,133,104,129,135,105,131,136,106,132,191,126,102,
    190,149,114,150,119,151,188,138,108,153,114,144,154,120,155,148,118,156,184,157,113,158,121,159,182,147,117,161,111,141,162,122,163,145,115,164,165,117,147,166,123,167,136,118,168,169,112,130,170,
    124,171,140,110,172,173,172,124,125,173,170,100,140,173,174,171,108,137,174,138,107,170,174,175,130,102,171,175,126,124,169,175,176,168,123,134,176,166,106,136,176,177,167,115,146,177,145,116,166,
    177,178,147,104,167,178,133,123,165,178,162,179,164,109,127,179,103,145,179,180,163,107,139,180,137,109,162,180,181,141,100,163,181,125,122,161,181,182,160,121,111,129,182,104,147,182,183,159,110,
    141,183,140,111,158,183,184,143,101,110,159,184,121,157,184,154,185,156,113,131,185,105,148,185,186,155,112,143,186,142,113,154,186,187,144,102,155,187,130,120,153,187,188,152,119,109,139,188,99,
    138,188,146,189,151,127,189,146,109,150,189,190,132,106,116,151,190,119,149,190,191,144,114,119,152,191,108,126,191,153,192,132,120,156,192,118,136,192,193,131,113,160,193,157,160,117,135,161,194,
    129,122,164,194,115,133,194,195,135,117,168,195,165,118,148,195,196,142,112,172,196,169,110,128,196,226,240,294,246,233,293,231,227,292,233,229,291,234,230,290,224,242,289,288,212,230,248,249,287,
    286,206,250,251,242,285,252,253,284,246,254,283,282,211,241,256,257,281,280,215,258,259,239,279,260,261,278,243,262,277,263,245,276,264,265,275,234,266,274,267,228,273,268,269,272,238,270,271,271,
    222,268,223,268,205,198,271,223,236,269,206,235,236,197,205,272,235,273,200,224,269,224,206,222,273,269,274,221,264,232,264,214,204,274,232,275,213,243,244,243,201,214,275,244,276,202,231,265,231,
    213,221,276,265,260,262,220,225,260,207,201,277,225,278,205,235,237,235,197,207,278,237,279,198,223,261,223,205,220,279,261,280,219,256,209,280,256,202,280,227,281,208,238,239,238,198,209,281,239,
    282,199,226,208,282,226,219,282,257,252,254,218,211,283,252,203,283,229,284,210,240,241,240,199,211,284,241,285,200,228,253,228,210,218,285,253,286,217,248,207,286,248,197,286,237,244,249,214,225,
    244,201,207,287,225,232,230,204,214,288,232,217,288,249,289,212,247,250,247,217,206,289,250,251,230,212,218,290,251,216,290,254,291,211,255,258,255,219,258,233,291,259,227,209,220,292,259,213,292,
    262,293,215,263,266,263,221,216,293,266,294,210,267,270,267,222,208,294,270,226,199,240,246,203,233,231,202,227,233,203,229,234,204,230,224,200,242,288,247,212,248,217,249,286,236,206,251,212,242,
    252,218,253,246,216,254,282,255,211,256,219,257,280,245,215,259,209,239,260,220,261,243,213,262,263,215,245,264,221,265,234,216,266,267,210,228,268,222,269,238,208,270,271,270,222,223,271,268,198,
    238,271,236,272,269,235,272,236,205,268,272,273,228,200,269,273,224,222,267,273,274,266,221,232,274,264,204,234,274,275,265,213,244,275,243,214,264,275,276,245,202,265,276,231,221,263,276,260,277,
    262,225,277,260,201,243,277,278,261,205,237,278,235,207,260,278,279,239,198,261,279,223,220,259,279,280,258,219,209,227,280,202,245,280,281,257,208,239,281,238,209,256,281,282,241,199,208,257,282,
    219,255,282,252,283,254,211,229,283,203,246,283,284,253,210,241,284,240,211,252,284,285,242,200,253,285,228,218,251,285,286,250,217,207,237,286,197,236,286,244,287,249,225,287,244,207,248,287,232,
    288,230,214,249,288,217,247,288,289,242,212,250,289,247,206,224,289,251,290,230,218,254,290,216,234,290,291,229,211,258,291,255,258,215,233,259,292,227,220,262,292,213,231,292,293,233,215,266,293,
    263,216,246,293,294,240,210,270,294,267,208,226,294,324,338,392,344,331,391,329,325,390,331,327,389,332,328,388,387,298,340,386,310,328,346,347,385,384,304,348,349,340,383,350,351,382,344,352,381,
    380,309,339,354,355,379,378,313,356,357,337,377,376,318,359,341,360,375,361,343,374,362,363,373,332,364,372,365,326,371,366,367,370,336,368,369,369,320,366,321,366,303,296,369,321,370,304,334,333,
    334,295,303,370,333,371,298,322,367,322,304,320,371,367,372,319,362,330,362,312,302,372,330,373,311,341,342,341,299,312,373,342,374,300,329,363,329,311,319,374,363,358,360,318,323,358,305,299,375,
    323,376,303,333,335,333,295,305,376,335,377,296,321,359,321,303,318,377,359,378,317,354,307,378,354,300,378,325,379,306,336,337,336,296,307,379,337,380,297,324,306,380,324,317,380,355,350,352,316,
    309,381,350,301,381,327,382,308,338,339,338,297,309,382,339,383,298,326,351,326,308,316,383,351,384,315,346,305,384,346,295,384,335,342,347,312,323,342,299,305,385,323,330,328,302,312,386,330,315,
    386,347,387,310,345,348,345,315,304,387,348,349,328,310,316,388,349,314,388,352,389,309,353,356,353,317,356,331,389,357,325,307,318,390,357,311,390,360,391,313,361,364,361,319,314,391,364,392,308,
    365,368,365,320,306,392,368,324,297,338,344,301,331,329,300,325,331,301,327,332,302,328,387,322,298,386,345,310,346,315,347,384,334,304,349,310,340,350,316,351,344,314,352,380,353,309,354,317,355,
    378,343,313,357,307,337,376,358,318,341,311,360,361,313,343,362,319,363,332,314,364,365,308,326,366,320,367,336,306,368,369,368,320,321,369,366,296,336,369,370,367,304,333,370,334,303,366,370,371,
    326,298,367,371,322,320,365,371,372,364,319,330,372,362,302,332,372,373,363,311,342,373,341,312,362,373,374,343,300,363,374,329,319,361,374,358,375,360,323,375,358,299,341,375,376,359,303,335,376,
    333,305,358,376,377,337,296,359,377,321,318,357,377,378,356,317,307,325,378,300,343,378,379,355,306,337,379,336,307,354,379,380,339,297,306,355,380,317,353,380,350,381,352,309,327,381,301,344,381,
    382,351,308,339,382,338,309,350,382,383,340,298,351,383,326,316,349,383,384,348,315,305,335,384,295,334,384,342,385,347,323,385,342,305,346,385,330,386,328,312,347,386,315,345,386,387,340,310,348,
    387,345,304,322,387,349,388,328,316,352,388,314,332,388,389,327,309,356,389,353,356,313,331,357,390,325,318,360,390,311,329,390,391,331,313,364,391,361,314,344,391,392,338,308,368,392,365,306,324,
    392
  ]};
}
let axis = Matrix.fromArray([0,1,0],3,1);
let position = Matrix.fromArray([0.0, 0.0,-3.0],3,1);
let rotation = 0.0;

function show() {

  gl.enable(gl.DEPTH_TEST);
  gl.clearColor(0.0, 0.0, 0.0, 0.0);


  /* every frame */
  gl.viewport(0,0, gl.canvas.width, gl.canvas.height);
  gl.clear(gl.COLOR_BUFFER_BIT);


  setProjectionMatrix(program, 60, 1, 2, 10);

  setModelView(program, position, rotation, axis);

  let xdata = getXData();
  xdata.faces = xdata.faces.map((x) => x-1);

  let vbo = createFloatBuffer(xdata.vertices);

  let ibo = createIndexBuffer(xdata.faces);

  /* enable */
  let aVertex = gl.getAttribLocation(program, "aVertex");
  gl.enableVertexAttribArray(aVertex);

  gl.vertexAttribPointer(aVertex, 3, gl.FLOAT, false, 0, 0);

  gl.drawElements(gl.TRIANGLES, Math.floor(xdata.faces.length), gl.UNSIGNED_SHORT, 0);

  rotation += 0.01;
  window.requestAnimationFrame(show);
}

function setProjectionMatrix(program, fov, aspect, near, far) {
  let projMatrix = createPerspectiveMat4(fov, aspect, near, far);
  gl.uniformMatrix4fv(
    gl.getUniformLocation(program, "uProj"),
    false,
    projMatrix.toArray(),
  );
  return projMatrix;
}

function createPerspectiveMat4(fov, aspect, near, far) {
  let f = 1.0 / Math.tan(fov * Math.PI / 360);
  let nf = 1.0 / (near - far);
  let m = Matrix.fromArray([
    f/aspect, 0, 0, 0,
    0, f, 0, 0,
    0, 0, (far+near)*nf, (2*far*near)*nf,
    0, 0, -1, 0
  ], 4, 4);
  return m;
}

function setModelView(program, pos, rot, axis) {
  let mv = Matrix.Identity(4);

  translateMat4(mv, pos);

  rotateMat4(mv, rot, axis);
  //rotateMat4(mv, 45/180 * Math.PI, Matrix.fromArray([1,0,0],3,1));
  gl.uniformMatrix4fv(
    gl.getUniformLocation(program, "uMV"),
    false,
    mv.toArray(),
  );
  return mv;
}

function translateMat4(M, V) {
  let x = V.getValue(0,0);
  let y = V.getValue(1,0);
  let z = V.getValue(2,0);
  M.setValue((M.getValue(0,0)*x + M.getValue(1,0) * y + M.getValue(2,0) * z + M.getValue(3,0)),3,0);
  M.setValue((M.getValue(0,1)*x + M.getValue(1,1) * y + M.getValue(2,1) * z + M.getValue(3,1)),3,1);
  M.setValue((M.getValue(0,2)*x + M.getValue(1,2) * y + M.getValue(2,2) * z + M.getValue(3,2)),3,2);
  M.setValue((M.getValue(0,3)*x + M.getValue(1,3) * y + M.getValue(2,3) * z + M.getValue(3,3)),3,3);
}

function rotateMat4(M, A, axis) {
  let x = axis.getValue(0,0);
  let y = axis.getValue(1,0);
  let z = axis.getValue(2,0);

  let axisLength = Math.sqrt(x*x + y*y + z*z);
  let sA = Math.sin(A);
  let cA = Math.cos(A);
  let t = 1 - cA;

  x = x / axisLength;
  y = y / axisLength;
  z = z / axisLength;

  let rm = new Matrix(4,4);
  rm.setValue(x*x*t+cA,0,0);
  rm.setValue(y*x*t+z*sA,0,1);
  rm.setValue(z*x*t-y*sA,0,2);
  rm.setValue(x*y*t-z*sA,1,0);
  rm.setValue(y*y*t+cA,1,1);
  rm.setValue(z*y*t+x*sA,1,2);
  rm.setValue(x*z*t+y*sA,2,0);
  rm.setValue(y*z*t-x*sA,2,1);
  rm.setValue(z*z*cA,2,2);

  let mm = Matrix.Multiply(rm, M);
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      M.setValue(mm.getValue(i,j),i,j);
    }
  }

}

function createFloatBuffer(data) {
  let buffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);
  return buffer;
}
function createIndexBuffer(data) {
  let buffer = gl.createBuffer();
  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);
  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), gl.STATIC_DRAW);
  return buffer;
}

function getWebgl() {
  let canvas = document.getElementById("c");
  let gl = canvas.getContext("webgl") ||
            canvas.getContext("experimental-webgl");
  return gl;
}

function createShaderObject(vs, fs) {
  let program = gl.createProgram();
  gl.attachShader(program, vs);
  gl.attachShader(program, fs);
  gl.linkProgram(program);
  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
    throw gl.getProgramInfoLog(program);
  }
  return program;
}

function getShader(source, type) {
  let shader = gl.createShader(type);
  gl.shaderSource(shader, source);
  gl.compileShader(shader);
  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
    throw gl.getShaderInfoLog(shader);
  }
  return shader;
}
